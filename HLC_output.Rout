
> sink(zz, type = "message")

> # Loading libraries
> library(sf)
Linking to GEOS 3.9.0dev, GDAL 3.2.0, PROJ 7.2.0

> library(spdep)
Loading required package: sp
Loading required package: spData

> library(tmap)

> library(units)
udunits system database from /usr/share/udunits

> library(Matrix)

> # Importing Devon HLC shapefile
> zipfile <- "https://archaeologydataservice.ac.uk/catalogue/adsdata/arch-2090-1/dissemination/zip/rawhlc.zip"

> ## subject to https://archaeologydataservice.ac.uk/advice/termsOfUseAndAccess.xhtml
> ## It can be cited by https://doi.org/10.5284/1032952
> 
> td  .... [TRUNCATED] 

> download.file(zipfile, destfile=file.path(td, "rawhlc.zip"))
trying URL 'https://archaeologydataservice.ac.uk/catalogue/adsdata/arch-2090-1/dissemination/zip/rawhlc.zip'
Content type 'application/zip' length 23188797 bytes (22.1 MB)
==================================================
downloaded 22.1 MB


> fls <- unzip(file.path(td, "rawhlc.zip"), exdir=td, overwrite=TRUE)

> devon_hlc <- st_read(file.path(td, "rawhlc.shp"), crs=27700)
Reading layer `rawhlc' from data source `/tmp/Rtmp9XWHzc/rawhlc.shp' using driver `ESRI Shapefile'
Simple feature collection with 49485 features and 36 fields
geometry type:  MULTIPOLYGON
dimension:      XY
bbox:           xmin: 220832 ymin: 34922.78 xmax: 337602.9 ymax: 148712.1
projected CRS:  OSGB 1936 / British National Grid

> ## clip to Torridge District boundary
> 
> torridge_bys <- "https://raw.githubusercontent.com/digital-land/boundary-collection/master/collection/loc ..." ... [TRUNCATED] 

> ## subject to https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/
> bdy <- st_read(torridge_bys)
Reading layer `index' from data source `https://raw.githubusercontent.com/digital-land/boundary-collection/master/collection/local-authority/E07000046/index.geojson' using driver `GeoJSON'
Simple feature collection with 1 feature and 10 fields
geometry type:  MULTIPOLYGON
dimension:      XY
bbox:           xmin: -4.680689 ymin: 50.64654 xmax: -3.883846 ymax: 51.20254
geographic CRS: WGS 84

> ## initially created with sf linked to GEOS 3.9.0dev, with OverlayNG 
> ## without OverlayNG, intersection fails because of topology errors
> ## req .... [TRUNCATED] 

> ## Create ordered factor
> 
> 
> hlc$class <- ifelse(hlc$PERIOD1 %in% c("Modern", "Post-medieval"), hlc$PERIOD1, "Medieval")

> hlc$class <- ordered(hlc$class, levels=c("Modern", "Post-medieval", "Medieval"))

> ## Map classes
> 
> HLC_map <- tm_shape(hlc) + tm_fill("class", palette="viridis", title="Character\nTypes") + tm_compass(position=c("left", "bottom ..." ... [TRUNCATED] 

> # tiff("Torridge_HLC.tiff", width=12, height=10, units="cm", res=300)
> # HLC_map
> # dev.off()
> jpeg("Torridge_HLC.jpeg", width=12, height=10, uni .... [TRUNCATED] 

> HLC_map

> dev.off()
null device 
          1 

> # library(mapview)
> # mapview(hlc, zcol="class")
> 
> ## Create neighbours
> nb1 <- poly2nb(hlc, snap=4, row.names=as.character(hlc$ID))

> hlc.nb <- nblag(nb1, 3) ## higher orders

> hlc.mat <- as(nb2listw(nblag_cumul(hlc.nb), style="B"), "CsparseMatrix")
Registered S3 methods overwritten by 'spatialreg':
  method                   from 
  residuals.stsls          spdep
  deviance.stsls           spdep
  coef.stsls               spdep
  print.stsls              spdep
  summary.stsls            spdep
  print.summary.stsls      spdep
  residuals.gmsar          spdep
  deviance.gmsar           spdep
  coef.gmsar               spdep
  fitted.gmsar             spdep
  print.gmsar              spdep
  summary.gmsar            spdep
  print.summary.gmsar      spdep
  print.lagmess            spdep
  summary.lagmess          spdep
  print.summary.lagmess    spdep
  residuals.lagmess        spdep
  deviance.lagmess         spdep
  coef.lagmess             spdep
  fitted.lagmess           spdep
  logLik.lagmess           spdep
  fitted.SFResult          spdep
  print.SFResult           spdep
  fitted.ME_res            spdep
  print.ME_res             spdep
  print.lagImpact          spdep
  plot.lagImpact           spdep
  summary.lagImpact        spdep
  HPDinterval.lagImpact    spdep
  print.summary.lagImpact  spdep
  print.sarlm              spdep
  summary.sarlm            spdep
  residuals.sarlm          spdep
  deviance.sarlm           spdep
  coef.sarlm               spdep
  vcov.sarlm               spdep
  fitted.sarlm             spdep
  logLik.sarlm             spdep
  anova.sarlm              spdep
  predict.sarlm            spdep
  print.summary.sarlm      spdep
  print.sarlm.pred         spdep
  as.data.frame.sarlm.pred spdep
  residuals.spautolm       spdep
  deviance.spautolm        spdep
  coef.spautolm            spdep
  fitted.spautolm          spdep
  print.spautolm           spdep
  summary.spautolm         spdep
  logLik.spautolm          spdep
  print.summary.spautolm   spdep
  print.WXImpact           spdep
  summary.WXImpact         spdep
  print.summary.WXImpact   spdep
  predict.SLX              spdep

> ## Join-Count Statistics
> 
> jc.hlc <- vector(mode="list", length=length(hlc.nb))

> jc.hlc.p <- vector(mode="list", length=length(hlc.nb))

> for (i in 1:length(hlc.nb)) {
+   jc.hlc[[i]] <- joincount.multi(hlc$class, nb2listw(hlc.nb[[i]]))
+   jc.hlc.p[[i]] <- pnorm(jc.hlc[[i]][,4], lower .... [TRUNCATED] 

> ## Exporting output
> 
> jcs <- do.call("rbind", jc.hlc)[-c(7, 14, 21),]

> jcps <- do.call("c", jc.hlc.p)[-c(7, 14, 21)]

> (jc_out <- data.frame(order=rep(c("First", "Second", "Third"), each=6), JCS=rownames(jcs), as.data.frame(cbind(jcs, pvalue=jcps)), row.names=NULL))
    order                         JCS  Joincount   Expected   Variance
1   First               Modern:Modern  771.12427  839.00207 102.175599
2   First Post-medieval:Post-medieval  345.60261  391.89976  59.981162
3   First           Medieval:Medieval   54.80680   53.16675   9.973976
4   First        Post-medieval:Modern 1091.05970 1147.26492 139.398052
5   First             Medieval:Modern  514.64644  422.73095  65.680018
6   First      Medieval:Post-medieval  365.76018  288.93556  48.634518
7  Second               Modern:Modern  839.46923  839.00207  30.997060
8  Second Post-medieval:Post-medieval  418.01951  391.89976  18.034020
9  Second           Medieval:Medieval   71.31331   53.16675   2.955733
10 Second        Post-medieval:Modern 1091.47783 1147.26492  41.291714
11 Second             Medieval:Modern  425.29930  422.73095  19.659496
12 Second      Medieval:Post-medieval  297.42082  288.93556  14.480309
13  Third               Modern:Modern  824.51919  839.00207  18.046848
14  Third Post-medieval:Post-medieval  394.30714  391.89976  10.147943
15  Third           Medieval:Medieval   60.36025   53.16675   1.569199
16  Third        Post-medieval:Modern 1137.75125 1147.26492  21.881608
17  Third             Medieval:Modern  435.02278  422.73095  10.870555
18  Third      Medieval:Post-medieval  291.03939  288.93556   7.837674
       z.value       pvalue
1  -6.71512609 1.000000e+00
2  -5.97787566 1.000000e+00
3   0.51930739 3.017732e-01
4  -4.76045268 9.999990e-01
5  11.34154148 4.084633e-30
6  11.01610665 1.597925e-28
7   0.08390832 4.665647e-01
8   6.15067428 3.857711e-10
9  10.55508654 2.405980e-26
10 -8.68164898 1.000000e+00
11  0.57925259 2.812094e-01
12  2.22985407 1.287857e-02
13 -3.40921464 9.996742e-01
14  0.75571103 2.249112e-01
15  5.74250544 4.664294e-09
16 -2.03379977 9.790141e-01
17  3.72812692 9.645411e-05
18  0.75148029 2.261818e-01

> write.csv(jc_out, "jc_out.csv", row.names=FALSE)

> ###########################################
> ## Boots' LICD (from Bivand et al. 2017) ##
> ###########################################
> 
> # For h .... [TRUNCATED] 
                   [,1]
Modern        0.5167038
Post-medieval 0.3531658
Medieval      0.1301304

> areas <- aggregate(st_area(hlc), list(hlc$class), sum)

> areas$x <- set_units(areas$x, "km2")

> areas$props <- drop_units(areas$x/sum(areas$x))

> areas
        Group.1               x     props
1        Modern 451.1156 [km^2] 0.4593523
2 Post-medieval 271.3623 [km^2] 0.2763170
3      Medieval 259.5909 [km^2] 0.2643307

> adata <- as.numeric(hlc$class) #factor no longer necessary, now numeric

> source("local_JC0.R")

> res <- local_JC0(obj=hlc, lagsmat=hlc.mat, varname="class", numvar=adata, p=p)

> local_comp <- res[[1]]

> JC.pvalue_seq <- res[[2]]

> #### STEP 2: local configuration
> 
> local_config <- matrix(0,length(adata),1)

> colnames(local_config) <- c("cluster-dispersion")

> for (j in 1:length(adata)){#for cluster is 1, for dispersion -1, otherwise 0
+   if (min(JC.pvalue_seq[j,])<1-(1-0.05)^(1/3)){ ###CHANGE
+     ifels .... [TRUNCATED] 

> # Combination of local composition and local configuration
> Type <- character(length=length(adata))

> C <- cbind(local_comp, local_config)

> for (i in 1:length(adata)){
+   ifelse(C[i,1] == 1 && C[i,2] == 1, Type[i] <- "Cluster",
+          ifelse(C[i,1] == 1 && C[i,2] == 0, Type[i] <- "C ..." ... [TRUNCATED] 

> # Plot LICD - TIFF + JPEG
> Type1 <-  Type

> hlc$Type <- Type

> is.na(Type1) <- Type1 == "No cluster"

> hlc$Type1 <- factor(Type1)

> LICD_map <- tm_shape(hlc) + tm_fill("Type1", palette="viridis", title="LICD", textNA="No cluster") + tm_compass(position=c("left", "bottom"))

> # tiff("Torridge_LICD.tiff", width=14, height=10, units="cm", res=300)
> # LICD_map
> # dev.off()
> jpeg("Torridge_LICD.jpeg", width=14, height=10,  .... [TRUNCATED] 

> LICD_map
Some legend labels were too wide. These labels have been resized to 0.65. Increase legend.width (argument of tm_layout) to make the legend wider and therefore the labels larger.

> dev.off()
null device 
          1 

> # library(mapview)
> # mapview(hlc, zcol="Type")
> 
> 
> # HLC & LICD
> 
> both <- LICD_map + tm_facets("class", nrow=1)

> jpeg("Torridge_HLC_LICD.jpeg",width=45,height=10,units="cm",res=300)

> both

> dev.off()
null device 
          1 

> sessionInfo()
R version 4.0.3 (2020-10-10)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Fedora 32 (Workstation Edition)

Matrix products: default
BLAS:   /home/rsb/topics/R/R403-share/lib64/R/lib/libRblas.so
LAPACK: /home/rsb/topics/R/R403-share/lib64/R/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8    
 [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8   
 [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] Matrix_1.2-18 units_0.6-7   tmap_3.2      spdep_1.1-5   spData_0.3.8 
[6] sp_1.4-4      sf_0.9-7     

loaded via a namespace (and not attached):
 [1] gtools_3.8.2       tidyselect_1.1.0   purrr_0.3.4        splines_4.0.3     
 [5] lattice_0.20-41    vctrs_0.3.4        generics_0.0.2     expm_0.999-5      
 [9] htmltools_0.5.0    stars_0.4-4        viridisLite_0.3.0  base64enc_0.1-3   
[13] XML_3.99-0.5       rlang_0.4.8        e1071_1.7-4        pillar_1.4.6      
[17] glue_1.4.2         DBI_1.1.0          RColorBrewer_1.1-2 spDataLarge_0.5.0 
[21] lifecycle_0.2.0    raster_3.3-15      htmlwidgets_1.5.2  codetools_0.2-16  
[25] leafsync_0.1.0     coda_0.19-4        crosstalk_1.1.0.1  parallel_4.0.3    
[29] class_7.3-17       leafem_0.1.3       Rcpp_1.0.5         KernSmooth_2.23-17
[33] classInt_0.4-3     lwgeom_0.2-5       gdata_2.18.0       spatialreg_1.1-6  
[37] leaflet_2.0.3      abind_1.4-5        deldir_0.1-29      png_0.1-7         
[41] digest_0.6.27      gmodels_2.18.1     dplyr_1.0.2        tmaptools_3.1     
[45] grid_4.0.3         tools_4.0.3        LearnBayes_2.15.1  magrittr_1.5      
[49] tibble_3.0.4       dichromat_2.0-0    crayon_1.3.4       pkgconfig_2.0.3   
[53] MASS_7.3-53        ellipsis_0.3.1     R6_2.4.1           boot_1.3-25       
[57] nlme_3.1-150       compiler_4.0.3    

> sink(type = "message")

> sink()
